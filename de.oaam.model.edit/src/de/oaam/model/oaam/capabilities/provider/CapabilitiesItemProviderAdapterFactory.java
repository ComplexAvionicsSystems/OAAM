/**
 */
package de.oaam.model.oaam.capabilities.provider;

import de.oaam.model.oaam.capabilities.util.CapabilitiesAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CapabilitiesItemProviderAdapterFactory extends CapabilitiesAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CapabilitiesItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.TaskOnDeviceCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskOnDeviceCapabilityItemProvider taskOnDeviceCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.TaskOnDeviceCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskOnDeviceCapabilityAdapter() {
		if (taskOnDeviceCapabilityItemProvider == null) {
			taskOnDeviceCapabilityItemProvider = new TaskOnDeviceCapabilityItemProvider(this);
		}

		return taskOnDeviceCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.DeviceInLocationCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeviceInLocationCapabilityItemProvider deviceInLocationCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.DeviceInLocationCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeviceInLocationCapabilityAdapter() {
		if (deviceInLocationCapabilityItemProvider == null) {
			deviceInLocationCapabilityItemProvider = new DeviceInLocationCapabilityItemProvider(this);
		}

		return deviceInLocationCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.ConnectionInDuctOrLocationCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionInDuctOrLocationCapabilityItemProvider connectionInDuctOrLocationCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.ConnectionInDuctOrLocationCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionInDuctOrLocationCapabilityAdapter() {
		if (connectionInDuctOrLocationCapabilityItemProvider == null) {
			connectionInDuctOrLocationCapabilityItemProvider = new ConnectionInDuctOrLocationCapabilityItemProvider(this);
		}

		return connectionInDuctOrLocationCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.SignalOnConnectionOrDeviceCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignalOnConnectionOrDeviceCapabilityItemProvider signalOnConnectionOrDeviceCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.SignalOnConnectionOrDeviceCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignalOnConnectionOrDeviceCapabilityAdapter() {
		if (signalOnConnectionOrDeviceCapabilityItemProvider == null) {
			signalOnConnectionOrDeviceCapabilityItemProvider = new SignalOnConnectionOrDeviceCapabilityItemProvider(this);
		}

		return signalOnConnectionOrDeviceCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.SubdeviceInDeviceCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubdeviceInDeviceCapabilityItemProvider subdeviceInDeviceCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.SubdeviceInDeviceCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubdeviceInDeviceCapabilityAdapter() {
		if (subdeviceInDeviceCapabilityItemProvider == null) {
			subdeviceInDeviceCapabilityItemProvider = new SubdeviceInDeviceCapabilityItemProvider(this);
		}

		return subdeviceInDeviceCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.SubconnectionInDeviceCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubconnectionInDeviceCapabilityItemProvider subconnectionInDeviceCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.SubconnectionInDeviceCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubconnectionInDeviceCapabilityAdapter() {
		if (subconnectionInDeviceCapabilityItemProvider == null) {
			subconnectionInDeviceCapabilityItemProvider = new SubconnectionInDeviceCapabilityItemProvider(this);
		}

		return subconnectionInDeviceCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.ResourceConsumption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceConsumptionItemProvider resourceConsumptionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.ResourceConsumption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceConsumptionAdapter() {
		if (resourceConsumptionItemProvider == null) {
			resourceConsumptionItemProvider = new ResourceConsumptionItemProvider(this);
		}

		return resourceConsumptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.Capabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilitiesItemProvider capabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.Capabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilitiesAdapter() {
		if (capabilitiesItemProvider == null) {
			capabilitiesItemProvider = new CapabilitiesItemProvider(this);
		}

		return capabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.Subcapabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubcapabilitiesItemProvider subcapabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.Subcapabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubcapabilitiesAdapter() {
		if (subcapabilitiesItemProvider == null) {
			subcapabilitiesItemProvider = new SubcapabilitiesItemProvider(this);
		}

		return subcapabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.MessageOnBusCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageOnBusCapabilityItemProvider messageOnBusCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.MessageOnBusCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageOnBusCapabilityAdapter() {
		if (messageOnBusCapabilityItemProvider == null) {
			messageOnBusCapabilityItemProvider = new MessageOnBusCapabilityItemProvider(this);
		}

		return messageOnBusCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.SubmessageInMessageCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmessageInMessageCapabilityItemProvider submessageInMessageCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.SubmessageInMessageCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubmessageInMessageCapabilityAdapter() {
		if (submessageInMessageCapabilityItemProvider == null) {
			submessageInMessageCapabilityItemProvider = new SubmessageInMessageCapabilityItemProvider(this);
		}

		return submessageInMessageCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.SignalInMessageCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignalInMessageCapabilityItemProvider signalInMessageCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.SignalInMessageCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignalInMessageCapabilityAdapter() {
		if (signalInMessageCapabilityItemProvider == null) {
			signalInMessageCapabilityItemProvider = new SignalInMessageCapabilityItemProvider(this);
		}

		return signalInMessageCapabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.capabilities.MessageOnConnectionOrDeviceCapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageOnConnectionOrDeviceCapabilityItemProvider messageOnConnectionOrDeviceCapabilityItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.capabilities.MessageOnConnectionOrDeviceCapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageOnConnectionOrDeviceCapabilityAdapter() {
		if (messageOnConnectionOrDeviceCapabilityItemProvider == null) {
			messageOnConnectionOrDeviceCapabilityItemProvider = new MessageOnConnectionOrDeviceCapabilityItemProvider(this);
		}

		return messageOnConnectionOrDeviceCapabilityItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (taskOnDeviceCapabilityItemProvider != null) taskOnDeviceCapabilityItemProvider.dispose();
		if (deviceInLocationCapabilityItemProvider != null) deviceInLocationCapabilityItemProvider.dispose();
		if (connectionInDuctOrLocationCapabilityItemProvider != null) connectionInDuctOrLocationCapabilityItemProvider.dispose();
		if (signalOnConnectionOrDeviceCapabilityItemProvider != null) signalOnConnectionOrDeviceCapabilityItemProvider.dispose();
		if (subdeviceInDeviceCapabilityItemProvider != null) subdeviceInDeviceCapabilityItemProvider.dispose();
		if (subconnectionInDeviceCapabilityItemProvider != null) subconnectionInDeviceCapabilityItemProvider.dispose();
		if (resourceConsumptionItemProvider != null) resourceConsumptionItemProvider.dispose();
		if (messageOnBusCapabilityItemProvider != null) messageOnBusCapabilityItemProvider.dispose();
		if (messageOnConnectionOrDeviceCapabilityItemProvider != null) messageOnConnectionOrDeviceCapabilityItemProvider.dispose();
		if (submessageInMessageCapabilityItemProvider != null) submessageInMessageCapabilityItemProvider.dispose();
		if (signalInMessageCapabilityItemProvider != null) signalInMessageCapabilityItemProvider.dispose();
		if (capabilitiesItemProvider != null) capabilitiesItemProvider.dispose();
		if (subcapabilitiesItemProvider != null) subcapabilitiesItemProvider.dispose();
	}

}
