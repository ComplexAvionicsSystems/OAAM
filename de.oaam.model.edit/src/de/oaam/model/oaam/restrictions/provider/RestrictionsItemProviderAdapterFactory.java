/**
 */
package de.oaam.model.oaam.restrictions.provider;

import de.oaam.model.oaam.restrictions.util.RestrictionsAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RestrictionsItemProviderAdapterFactory extends RestrictionsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RestrictionsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.Restrictions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestrictionsItemProvider restrictionsItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.Restrictions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestrictionsAdapter() {
		if (restrictionsItemProvider == null) {
			restrictionsItemProvider = new RestrictionsItemProvider(this);
		}

		return restrictionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.Subrestrictions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubrestrictionsItemProvider subrestrictionsItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.Subrestrictions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubrestrictionsAdapter() {
		if (subrestrictionsItemProvider == null) {
			subrestrictionsItemProvider = new SubrestrictionsItemProvider(this);
		}

		return subrestrictionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.PathSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathSegmentItemProvider pathSegmentItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.PathSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathSegmentAdapter() {
		if (pathSegmentItemProvider == null) {
			pathSegmentItemProvider = new PathSegmentItemProvider(this);
		}

		return pathSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.LocationRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationRestrictionItemProvider locationRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.LocationRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationRestrictionAdapter() {
		if (locationRestrictionItemProvider == null) {
			locationRestrictionItemProvider = new LocationRestrictionItemProvider(this);
		}

		return locationRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.AreaRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AreaRestrictionItemProvider areaRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.AreaRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAreaRestrictionAdapter() {
		if (areaRestrictionItemProvider == null) {
			areaRestrictionItemProvider = new AreaRestrictionItemProvider(this);
		}

		return areaRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.PowerSourceRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PowerSourceRestrictionItemProvider powerSourceRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.PowerSourceRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPowerSourceRestrictionAdapter() {
		if (powerSourceRestrictionItemProvider == null) {
			powerSourceRestrictionItemProvider = new PowerSourceRestrictionItemProvider(this);
		}

		return powerSourceRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.DeviceRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeviceRestrictionItemProvider deviceRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.DeviceRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeviceRestrictionAdapter() {
		if (deviceRestrictionItemProvider == null) {
			deviceRestrictionItemProvider = new DeviceRestrictionItemProvider(this);
		}

		return deviceRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.DeviceTypeRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeviceTypeRestrictionItemProvider deviceTypeRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.DeviceTypeRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeviceTypeRestrictionAdapter() {
		if (deviceTypeRestrictionItemProvider == null) {
			deviceTypeRestrictionItemProvider = new DeviceTypeRestrictionItemProvider(this);
		}

		return deviceTypeRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.ConectionTypeRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConectionTypeRestrictionItemProvider conectionTypeRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.ConectionTypeRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConectionTypeRestrictionAdapter() {
		if (conectionTypeRestrictionItemProvider == null) {
			conectionTypeRestrictionItemProvider = new ConectionTypeRestrictionItemProvider(this);
		}

		return conectionTypeRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.ConnectionRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionRestrictionItemProvider connectionRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.ConnectionRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionRestrictionAdapter() {
		if (connectionRestrictionItemProvider == null) {
			connectionRestrictionItemProvider = new ConnectionRestrictionItemProvider(this);
		}

		return connectionRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.SegregationRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SegregationRestrictionItemProvider segregationRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.SegregationRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSegregationRestrictionAdapter() {
		if (segregationRestrictionItemProvider == null) {
			segregationRestrictionItemProvider = new SegregationRestrictionItemProvider(this);
		}

		return segregationRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.TaskRateRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskRateRestrictionItemProvider taskRateRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.TaskRateRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskRateRestrictionAdapter() {
		if (taskRateRestrictionItemProvider == null) {
			taskRateRestrictionItemProvider = new TaskRateRestrictionItemProvider(this);
		}

		return taskRateRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.InputSynchronicityRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputSynchronicityRestrictionItemProvider inputSynchronicityRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.InputSynchronicityRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputSynchronicityRestrictionAdapter() {
		if (inputSynchronicityRestrictionItemProvider == null) {
			inputSynchronicityRestrictionItemProvider = new InputSynchronicityRestrictionItemProvider(this);
		}

		return inputSynchronicityRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.PathDelayRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathDelayRestrictionItemProvider pathDelayRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.PathDelayRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathDelayRestrictionAdapter() {
		if (pathDelayRestrictionItemProvider == null) {
			pathDelayRestrictionItemProvider = new PathDelayRestrictionItemProvider(this);
		}

		return pathDelayRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.TaskAtomicRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskAtomicRestrictionItemProvider taskAtomicRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.TaskAtomicRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskAtomicRestrictionAdapter() {
		if (taskAtomicRestrictionItemProvider == null) {
			taskAtomicRestrictionItemProvider = new TaskAtomicRestrictionItemProvider(this);
		}

		return taskAtomicRestrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.oaam.model.oaam.restrictions.TaskSymmetryRestriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskSymmetryRestrictionItemProvider taskSymmetryRestrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.oaam.model.oaam.restrictions.TaskSymmetryRestriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskSymmetryRestrictionAdapter() {
		if (taskSymmetryRestrictionItemProvider == null) {
			taskSymmetryRestrictionItemProvider = new TaskSymmetryRestrictionItemProvider(this);
		}

		return taskSymmetryRestrictionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (restrictionsItemProvider != null) restrictionsItemProvider.dispose();
		if (subrestrictionsItemProvider != null) subrestrictionsItemProvider.dispose();
		if (pathSegmentItemProvider != null) pathSegmentItemProvider.dispose();
		if (locationRestrictionItemProvider != null) locationRestrictionItemProvider.dispose();
		if (areaRestrictionItemProvider != null) areaRestrictionItemProvider.dispose();
		if (powerSourceRestrictionItemProvider != null) powerSourceRestrictionItemProvider.dispose();
		if (deviceRestrictionItemProvider != null) deviceRestrictionItemProvider.dispose();
		if (deviceTypeRestrictionItemProvider != null) deviceTypeRestrictionItemProvider.dispose();
		if (conectionTypeRestrictionItemProvider != null) conectionTypeRestrictionItemProvider.dispose();
		if (connectionRestrictionItemProvider != null) connectionRestrictionItemProvider.dispose();
		if (segregationRestrictionItemProvider != null) segregationRestrictionItemProvider.dispose();
		if (taskRateRestrictionItemProvider != null) taskRateRestrictionItemProvider.dispose();
		if (inputSynchronicityRestrictionItemProvider != null) inputSynchronicityRestrictionItemProvider.dispose();
		if (pathDelayRestrictionItemProvider != null) pathDelayRestrictionItemProvider.dispose();
		if (taskAtomicRestrictionItemProvider != null) taskAtomicRestrictionItemProvider.dispose();
		if (taskSymmetryRestrictionItemProvider != null) taskSymmetryRestrictionItemProvider.dispose();
	}

}
