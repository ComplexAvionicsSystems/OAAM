<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="oaam" version="11.1.1.201610211630">
  <ownedViewpoints name="oaamEditor">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="functionType" domainClass="Library" enablePopupBars="true">
      <metamodel href="../../de.oaam.model/model/oaam.ecore#/"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//common"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//library"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//scenario"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//systems"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//functions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//hardware"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//anatomy"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//capabilities"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//restrictions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//mapping"/>
      <defaultLayer name="Default">
        <containerMappings name="TaskType" domainClass="TaskType">
          <borderedNodeMappings name="InputDeclaration" semanticCandidatesExpression="feature:eAllContents" domainClass="InputDeclaration">
            <style xsi:type="style:DotDescription" showIcon="false" labelAlignment="RIGHT" sizeComputationExpression="1" resizeKind="NSEW" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="OutputDeclaration" semanticCandidatesExpression="feature:eAllContents" domainClass="OutputDeclaration">
            <style xsi:type="style:DotDescription" showIcon="false" labelAlignment="RIGHT" sizeComputationExpression="1" resizeKind="NSEW" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="DataTypes" domainClass="com"/>
        <toolSections name="CreateElements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createTaskType" label="TaskType" containerMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='functionType']/@defaultLayer/@containerMappings[name='TaskType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TaskType" referenceName="taskTypes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newTaskType"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createInputDeclaration" label="InputDeclaration" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='functionType']/@defaultLayer/@containerMappings[name='TaskType']/@borderedNodeMappings[name='InputDeclaration']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="InputDeclaration" referenceName="inputs">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newInputDeclaration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createOutputDeclaration" label="OutputDeclaration" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='functionType']/@defaultLayer/@containerMappings[name='TaskType']/@borderedNodeMappings[name='OutputDeclaration']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="OutputDeclaration" referenceName="outputs">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newOutputDeclaration"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="function" domainClass="Functions" enablePopupBars="true">
      <metamodel href="../../de.oaam.model/model/oaam.ecore#/"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//common"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//library"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//scenario"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//systems"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//functions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//hardware"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//anatomy"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//capabilities"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//restrictions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//mapping"/>
      <defaultLayer name="Default">
        <edgeMappings name="Signal" sourceMapping="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']/@borderedNodeMappings[name='Output']" targetMapping="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']/@borderedNodeMappings[name='Input']" targetFinderExpression="aql:self.eGet('target')" sourceFinderExpression="aql:self.eGet('source')" domainClass="Signal" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.eGet('type').name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Task" deletionDescription="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@toolSections.0/@ownedTools[name='deleteTask']" doubleClickDescription="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@toolSections.0/@ownedTools[name='setTask']" domainClass="Task">
          <borderedNodeMappings name="Input" deletionDescription="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@toolSections.0/@ownedTools[name='deleteInput']" semanticCandidatesExpression="feature:eAllContents" domainClass="Input">
            <borderedNodeMappings name="InputSync" semanticCandidatesExpression="aql:self.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Restrictions')).eContents()->select(p|p.eClass().name.startsWith('InputSynchronicityRestriction'))->select(p|p.eGet('inputs')->includes(self))" domainClass="InputSynchronicityRestriction">
              <style xsi:type="style:NoteDescription" showIcon="false" labelExpression="sync" sizeComputationExpression="1" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>EAST</forbiddenSides>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:DotDescription" showIcon="false" labelAlignment="RIGHT" sizeComputationExpression="1" resizeKind="NSEW" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="Output" deletionDescription="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@toolSections.0/@ownedTools[name='deleteOutput']" semanticCandidatesExpression="feature:eAllContents" domainClass="Output">
            <style xsi:type="style:DotDescription" showIcon="false" labelAlignment="RIGHT" sizeComputationExpression="1" resizeKind="NSEW" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="RateRestriction" semanticCandidatesExpression="aql:self.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Restrictions')).eContents()->select(p|p.eClass().name.startsWith('TaskRateRestriction'))->select(p|p.eGet('tasks')->includes(self))" domainClass="TaskRateRestriction">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.eGet('rate')+' Hz'" sizeComputationExpression="2" resizeKind="NSEW" width="2" height="2">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <toolSections name="CreateElements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createTask" label="Task" containerMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Task" referenceName="tasks">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newTask"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createInput" label="Input" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']/@borderedNodeMappings[name='Input']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Input" referenceName="inputs">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newInput"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createOutput" label="Output" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']/@borderedNodeMappings[name='Output']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Output" referenceName="outputs">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newOutput"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createRateRestriction" label="RateRestriction" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']/@borderedNodeMappings[name='RateRestriction']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Restrictions'))->first()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TaskRateRestriction" referenceName="taskRateRestrictions">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="tasks" valueExpression="aql:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="createSignal" label="Signal" edgeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@edgeMappings[name='Signal']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions'))->first()">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:source.declaration.type=target.declaration.type">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Signal" referenceName="signals">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="aql:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="aql:target"/>
                    <subModelOperations xsi:type="tool_1:Switch">
                      <cases conditionExpression="aql:source.declaration.type.eClass().name='Integer'">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:source.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Library')).eContents()->select(p|p.eClass().name.startsWith('SignalType'))->select(p|p.name.startsWith('Integer'))->first()"/>
                      </cases>
                      <default>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="aql:source.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Library')).eContents()->select(p|p.eClass().name.startsWith('SignalType'))->select(p|p.name.startsWith('Float'))->first()"/>
                      </default>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="setTask" elementsToSelect="aql:self" mappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='function']/@defaultLayer/@containerMappings[name='Task']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.eGet('type')->notEmpty()">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContents()">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('source')->includes(i))->notEmpty()">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('source')->includes(i))->first()">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContents()">
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('target')->includes(i))->notEmpty()">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('target')->includes(i))->first()">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContents()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eGet('type').eContents()->select(p|p.eClass().name.startsWith('Input'))">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Input" referenceName="inputs">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:i.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="declaration" valueExpression="aql:i"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="aql:element.eGet('type').eContents()->select(p|p.eClass().name.startsWith('Output'))">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Output" referenceName="outputs">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:i.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="declaration" valueExpression="aql:i"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:self.eGet('type').name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="deleteTask">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContents()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('source')->includes(i))->notEmpty()">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('source')->includes(i))->first()">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql:element.eContents()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('target')->includes(i))->notEmpty()">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('target')->includes(i))->first()">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Restrictions')).eContents()->select(p|p.eGet('tasks')->includes(element))->notEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Restrictions')).eContents()->select(p|p.eGet('tasks')->includes(element))->first()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="deleteInput">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('target')->includes(element))->notEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('target')->includes(element))->first()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="deleteOutput">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('source')->includes(element))->notEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions')).eContents()->select(p|p.eClass().name.startsWith('Signal'))->select(p|p.eGet('source')->includes(element))->first()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="setTask2">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newContainer">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Task" referenceName="tasks">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="'test'"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="hardware" domainClass="Hardware" enablePopupBars="true">
      <metamodel href="../../de.oaam.model/model/oaam.ecore#/"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//common"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//library"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//scenario"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//systems"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//functions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//hardware"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//anatomy"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//capabilities"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//restrictions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//mapping"/>
      <defaultLayer name="Default">
        <edgeMappings name="Connection" sourceMapping="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@containerMappings[name='Device']" targetMapping="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@containerMappings[name='Device']" targetFinderExpression="aql:self.eGet('endPoints')->last().eContainer()" sourceFinderExpression="aql:self.eGet('endPoints')->first().eContainer()" domainClass="Connection" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <beginLabelStyleDescription showIcon="false" labelExpression="aql:self.eGet('endPoints')->first().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </beginLabelStyleDescription>
            <endLabelStyleDescription showIcon="false" labelExpression="aql:self.eGet('endPoints')->last().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </endLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Device" deletionDescription="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@toolSections.0/@ownedTools[name='cleanTasks']" domainClass="Device" childrenPresentation="List">
          <subNodeMappings name="Io" semanticCandidatesExpression="feature:eAllContents" domainClass="Io">
            <style xsi:type="style:SquareDescription" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql:self.eGet('name')+' ('+self.eGet('type').name+')'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="Types" domainClass="Library" childrenPresentation="List">
          <subNodeMappings name="DeviceType" semanticCandidatesExpression="feature:eAllContents" domainClass="DeviceType">
            <style xsi:type="style:SquareDescription" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="Device Types">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="CreateElements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="createDevice" label="Device" containerMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@containerMappings[name='Device']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Device" referenceName="devices">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newDevice"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createIo" label="Io" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@containerMappings[name='Device']/@subNodeMappings[name='Io']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Io" referenceName="ios">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ethX_'+container.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="createConnection" label="Connection" edgeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@edgeMappings[name='Connection']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Hardware'))->first()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Connection" referenceName="connections">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="endPoints" valueExpression="aql:Sequence{source.eContents()->first(),target.eContents()->first()}"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createDeviceType" label="DeviceType" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='hardware']/@defaultLayer/@containerMappings[name='Types']/@subNodeMappings[name='DeviceType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="DeviceType" referenceName="deviceTypes">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="NewDeviceType"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="cleanTasks">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element))->notEmpty()">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element)).eGet('task')">
                    <subModelOperations xsi:type="tool_1:RemoveElement">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element))->first()">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element))->isEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="mapping" domainClass="Hardware" enablePopupBars="true">
      <metamodel href="../../de.oaam.model/model/oaam.ecore#/"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//common"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//library"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//scenario"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//systems"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//functions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//hardware"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//anatomy"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//capabilities"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//restrictions"/>
      <metamodel href="../../de.oaam.model/model/oaam.ecore#//mapping"/>
      <defaultLayer name="Default">
        <edgeMappings name="Connection" sourceMapping="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='mapping']/@defaultLayer/@containerMappings[name='Device']" targetMapping="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='mapping']/@defaultLayer/@containerMappings[name='Device']" targetFinderExpression="aql:self.eGet('endPoints')->last().eContainer()" sourceFinderExpression="aql:self.eGet('endPoints')->first().eContainer()" domainClass="Connection" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </edgeMappings>
        <containerMappings name="Device" deletionDescription="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='mapping']/@defaultLayer/@toolSections.0/@ownedTools[name='cleanTasks']" domainClass="Device" childrenPresentation="List">
          <subNodeMappings name="AllocTask" semanticCandidatesExpression="aql:self.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping')).eContents()->select(p|p.eGet('device')->includes(self)).eGet('task')" domainClass="Task">
            <style xsi:type="style:SquareDescription" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql:self.eGet('name')+' ('+self.eGet('type').name+')'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="CreateElements">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createTask" label="Task" nodeMappings="//@ownedViewpoints[name='oaamEditor']/@ownedRepresentations[name='mapping']/@defaultLayer/@containerMappings[name='Device']/@subNodeMappings[name='AllocTask']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Functions'))->first()">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="Task" referenceName="tasks">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'TASK_'+container.name"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TaskAssignment" referenceName="taskAssignments">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="device" valueExpression="aql:containerView.target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="task" valueExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Function'))->first().eContents()->last()"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="cleanMappings">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('task')->includes(element))->last()">
                <subModelOperations xsi:type="tool_1:RemoveElement">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="cleanTasks">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element))->notEmpty()">
                  <subModelOperations xsi:type="tool_1:For" expression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element)).eGet('task')">
                    <subModelOperations xsi:type="tool_1:RemoveElement">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element))->first()">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </cases>
                <cases conditionExpression="aql:containerView.target.ancestors()->select(p|p.eClass().name.startsWith('Architecture')).eContents()->select(p|p.eClass().name.startsWith('Mapping'))->first().eContents()->select(p|p.eGet('device')->includes(element))->isEmpty()">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </cases>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
  </ownedViewpoints>
</description:Group>
